/**
* MG M2 Lightning API
* Magento 2.3 API as standalone server
*
* OpenAPI spec version: 0.1.0
* Contact: apiteam@swagger.io
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "Error-errors-item.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

Error-errors-item::Error-errors-item()
{
    m_Message = "";
    m_MessageIsSet = false;
    m_ParametersIsSet = false;
    
}

Error-errors-item::~Error-errors-item()
{
}

void Error-errors-item::validate()
{
    // TODO: implement validation
}

nlohmann::json Error-errors-item::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_MessageIsSet)
    {
        val["message"] = ModelBase::toJson(m_Message);
    }
    if(m_ParametersIsSet)
    {
        val["parameters"] = ModelBase::toJson(m_Parameters);
    }
    

    return val;
}

void Error-errors-item::fromJson(nlohmann::json& val)
{
    if(val.find("message") != val.end())
    {
        setMessage(val.at("message"));
        
    }
    if(val.find("parameters") != val.end())
    {
        if(!val["parameters"].is_null())
        {
            std::shared_ptr<Error-parameters> newItem(new Error-parameters());
            newItem->fromJson(val["parameters"]);
            setParameters( newItem );
        }
        
    }
    
}


std::string Error-errors-item::getMessage() const
{
    return m_Message;
}
void Error-errors-item::setMessage(std::string value)
{
    m_Message = value;
    m_MessageIsSet = true;
}
bool Error-errors-item::messageIsSet() const
{
    return m_MessageIsSet;
}
void Error-errors-item::unsetMessage()
{
    m_MessageIsSet = false;
}
std::shared_ptr<Error-parameters> Error-errors-item::getParameters() const
{
    return m_Parameters;
}
void Error-errors-item::setParameters(std::shared_ptr<Error-parameters> value)
{
    m_Parameters = value;
    m_ParametersIsSet = true;
}
bool Error-errors-item::parametersIsSet() const
{
    return m_ParametersIsSet;
}
void Error-errors-item::unsetParameters()
{
    m_ParametersIsSet = false;
}

}
}
}
}

