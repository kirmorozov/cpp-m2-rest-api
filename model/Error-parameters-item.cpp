/**
* MG M2 Lightning API
* Magento 2.3 API as standalone server
*
* OpenAPI spec version: 0.1.0
* Contact: apiteam@swagger.io
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "Error-parameters-item.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

Error-parameters-item::Error-parameters-item()
{
    m_Resources = "";
    m_ResourcesIsSet = false;
    m_FieldName = "";
    m_FieldNameIsSet = false;
    m_FieldValue = "";
    m_FieldValueIsSet = false;
    
}

Error-parameters-item::~Error-parameters-item()
{
}

void Error-parameters-item::validate()
{
    // TODO: implement validation
}

nlohmann::json Error-parameters-item::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_ResourcesIsSet)
    {
        val["resources"] = ModelBase::toJson(m_Resources);
    }
    if(m_FieldNameIsSet)
    {
        val["fieldName"] = ModelBase::toJson(m_FieldName);
    }
    if(m_FieldValueIsSet)
    {
        val["fieldValue"] = ModelBase::toJson(m_FieldValue);
    }
    

    return val;
}

void Error-parameters-item::fromJson(nlohmann::json& val)
{
    if(val.find("resources") != val.end())
    {
        setResources(val.at("resources"));
        
    }
    if(val.find("fieldName") != val.end())
    {
        setFieldName(val.at("fieldName"));
        
    }
    if(val.find("fieldValue") != val.end())
    {
        setFieldValue(val.at("fieldValue"));
        
    }
    
}


std::string Error-parameters-item::getResources() const
{
    return m_Resources;
}
void Error-parameters-item::setResources(std::string value)
{
    m_Resources = value;
    m_ResourcesIsSet = true;
}
bool Error-parameters-item::resourcesIsSet() const
{
    return m_ResourcesIsSet;
}
void Error-parameters-item::unsetResources()
{
    m_ResourcesIsSet = false;
}
std::string Error-parameters-item::getFieldName() const
{
    return m_FieldName;
}
void Error-parameters-item::setFieldName(std::string value)
{
    m_FieldName = value;
    m_FieldNameIsSet = true;
}
bool Error-parameters-item::fieldNameIsSet() const
{
    return m_FieldNameIsSet;
}
void Error-parameters-item::unsetFieldName()
{
    m_FieldNameIsSet = false;
}
std::string Error-parameters-item::getFieldValue() const
{
    return m_FieldValue;
}
void Error-parameters-item::setFieldValue(std::string value)
{
    m_FieldValue = value;
    m_FieldValueIsSet = true;
}
bool Error-parameters-item::fieldValueIsSet() const
{
    return m_FieldValueIsSet;
}
void Error-parameters-item::unsetFieldValue()
{
    m_FieldValueIsSet = false;
}

}
}
}
}

